[
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AddressController",
    "Method": "GetAddressByUserId",
    "RelativePath": "api/Address",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthenticationApi.Application.DTOs.UserAddressDTO, AuthenticationApi.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AddressController",
    "Method": "CreateAddress",
    "RelativePath": "api/Address",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.UserAddressDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AddressController",
    "Method": "UpdateAddress",
    "RelativePath": "api/Address",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.UserAddressDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AddressController",
    "Method": "DeleteAddress",
    "RelativePath": "api/Address",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.UserAddressDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AddressController",
    "Method": "FindAddressById",
    "RelativePath": "api/Address/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthenticationApi.Application.DTOs.UserAddressDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AddressController",
    "Method": "GetAllAddress",
    "RelativePath": "api/Address/get-all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthenticationApi.Application.DTOs.UserAddressDTO, AuthenticationApi.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "GetUsers",
    "RelativePath": "api/Authentication",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthenticationApi.Application.DTOs.GetUserDTO, AuthenticationApi.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "DeleteUser",
    "RelativePath": "api/Authentication",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.GetUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "UpdateUser",
    "RelativePath": "api/Authentication",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.UpdateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "GetUser",
    "RelativePath": "api/Authentication/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthenticationApi.Application.DTOs.GetUserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "BanUser",
    "RelativePath": "api/Authentication/ban",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "BanUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "ChangePassword",
    "RelativePath": "api/Authentication/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entiy",
        "Type": "AuthenticationApi.Application.DTOs.ChangePasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "ForgetPassword",
    "RelativePath": "api/Authentication/forget-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.ForgetPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDTO",
        "Type": "AuthenticationApi.Application.DTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "GenerateOtp",
    "RelativePath": "api/Authentication/otp-generate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.OtpRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "VerifyeOtp",
    "RelativePath": "api/Authentication/otp-verify",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.VerifyOtpDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "Register",
    "RelativePath": "api/Authentication/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appUserDTO",
        "Type": "AuthenticationApi.Application.DTOs.AppUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "ResetPassword",
    "RelativePath": "api/Authentication/reset-password/{token}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.ResetPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.AuthenticationController",
    "Method": "UpdateRoleUser",
    "RelativePath": "api/Authentication/update-role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.UpdateRoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.RolesController",
    "Method": "GetAllRoles",
    "RelativePath": "api/Roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthenticationApi.Application.DTOs.AppRoleDTO, AuthenticationApi.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.RolesController",
    "Method": "CreateRole",
    "RelativePath": "api/Roles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.AppRoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.RolesController",
    "Method": "UpdateRole",
    "RelativePath": "api/Roles",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.AppRoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.RolesController",
    "Method": "DeleteRole",
    "RelativePath": "api/Roles",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "AuthenticationApi.Application.DTOs.AppRoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "E_Commerce.SharedLibray.Responses.Response",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthenticationApi.Presentation.Controllers.RolesController",
    "Method": "FindRoleById",
    "RelativePath": "api/Roles/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthenticationApi.Application.DTOs.AppRoleDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]